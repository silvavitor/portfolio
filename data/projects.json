{
  "projects": [
    {
      "id": "mycontacts",
      "title": "MyContacts",
      "description": {
        "pt": "Um projeto full-stack para organizar contatos e suas categorias. Foi desenvolvido com o mínimo de pacotes possíveis, funcionalidades como: validações de formulários, mensagens toast, modais, animações e cliente HTTP foram criadas.",
        "en": "Full-stack project to organize contacts and their categories. It was developed with as few packages as possible, features such as: form validations, toast messages, modals, animations and an HTTP client were created."
      },
      "images": [
        "mycontacts.webp",
        "mycontacts2.webp",
        "mycontacts3.webp",
        "mycontactsmobile.webp"
      ],
      "techs": [
        "React",
        "Node",
        "PostgreSQL",
        "Express",
        "Styled-Components"
      ],
      "repo": "https://github.com/silvavitor/my-contacts",
      "live": ""
    },
    {
      "id": "portfolio",
      "title": "Portfolio",
      "description": {
        "pt": "Portfolio moderno e minimalista. Foi desenvolvido com Typescript, Next.js 13 utilizando o App Router, Resend para o envio de e-mails e Tailwind(Mobile first) para estilizações.",
        "en": "Modern and minimalist portfolio. It was developed with Typescript, Next.js 13 using the App Router, Resend to send e-mails and Tailwind(Mobile first) for styling."
      },
      "images": [
        "portfolio.webp",
        "portfolio2.webp"
      ],
      "techs": [
        "Next.js",
        "Tailwind.css",
        "TypeScript"
      ],
      "repo": "https://github.com/silvavitor/portfolio",
      "live": "https://vitorfernandoportfolio.vercel.app/"
    },
    {
      "id": "mycontactsapinest",
      "title": "MyContacts NestJS API",
      "description": {
        "pt": "Reescrita do código de backend do MyContacts utilizando NestJS, Prisma com driver de PostgreSQL e princípios SOLID como utilizar a inversão de dependêcias e depender de um contrato(interface) não de uma classe real",
        "en": "Rewritten MyContacts backend code using NestJS, Prisma with PostgreSQL driver and SOLID principles such as using dependency inversion and depends on a contract(interface) not an actual class"
      },
      "images": [
        "mycontacts_nest.webp"
      ],
      "techs": [
        "Node",
        "NestJS",
        "Prisma",
        "TypeScript",
        "PostgreSQL"
      ],
      "repo": "https://github.com/silvavitor/my-contacts-api-nest",
      "live": ""
    },
    {
      "id": "facerecognition",
      "title": "FaceRecognition",
      "description": {
        "pt": "Meu primeiro projeto com React, um software que detecta faces numa imagem utilizando IA.",
        "en": "My first project with react, a software that detects faces in an image using AI."
      },
      "images": [
        "facedetection.webp"
      ],
      "techs": [
        "React",
        "Node",
        "PostgreSQL",
        "Express"
      ],
      "repo": "https://github.com/silvavitor/face-detection",
      "live": ""
    }
  ]
}